require 'carmen'
require 'json'
require 'money'

desc 'generate money seeds'
task :money do
  puts 'generate currencies.json'
  items = Money::Currency.table.map do |key, val|
    # it.except!(:priority)
    {
      key: key,
      iso_code: val[:iso_code],
      name: val[:name],
      symbol:  val[:symbol].empty? ? nil : val[:symbol],
      alternate_symbols: val[:alternate_symbols],
      subunit:  val[:subunit].nil? || val[:subunit].empty? ? nil : val[:subunit],
      subunit_to_unit: val[:subunit_to_unit],
      symbol_first: val[:symbol_first],
      html_entity: val[:html_entity].empty? ? nil : val[:html_entity],
      decimal_mark: val[:decimal_mark],
      thousands_separator: val[:thousands_separator],
      iso_numeric: val[:iso_numeric].empty? ? nil : val[:iso_numeric].to_i,
      smallest_denomination: val[:smallest_denomination].to_i || nil
    }
  end
  File.open('../db/seed/money/currencies.json', 'w') do |f|
    f.write JSON.pretty_generate(items)
  end
end

desc 'generate carmen seeds'
task :carmen do
  puts 'generate countries.json'
  countries = Carmen::Country.all.map do |c|
    states = c.subregions.map do |s|
      { name: s.name, abbr: s.code }
    end
    { name: c.name,
      iso3: c.alpha_3_code,
      iso: c.alpha_2_code,
      iso_name: c.name.upcase,
      numcode: c.numeric_code.to_i,
      states_required: c.subregions?,
      states: states }
  end
  File.open('../db/seed/carmen/countries.json', 'w') do |f|
    f.write JSON.pretty_generate(countries)
  end

  %i[en cn tw].each do |l|
    puts "generate #{l}.json"
    Carmen.i18n_backend.locale = l
    items = []
    Carmen::Country.all.each do |c|
      items << { code: "countries.#{c.alpha_3_code}.name", message: c.name }
      c.subregions.each do |s|
        items << { code: "countries.#{c.alpha_3_code}.states.#{s.code}", message: s.name }
      end
    end
    File.open("../db/seed/carmen/#{l}.json", 'w') do |f|
      f.write JSON.pretty_generate(items)
    end
  end
end
